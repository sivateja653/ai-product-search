name: CI

on:
  push:
    branches: [ main, staging ]
    paths:
      - 'backend/search-service/**'
      - 'infra/ecs-task/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/search-service/**'
      - 'infra/ecs-task/**'
      - '.github/workflows/**'

permissions:
  contents: read
  id-token: write

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build & Quality (backend/search-service)
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      ECR_REPOSITORY: search-service
      SERVICE_PATH: backend/search-service
      SPRING_PROFILES_ACTIVE: test
      MAVEN_OPTS: -Xmx1g

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      # Cache the large NVD database used by OWASP Dep Check
      - name: Cache OWASP Dependency-Check data
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository/org/owasp/dependency-check-data
          key: owasp-${{ runner.os }}-v1

      # Single run: tests + coverage + checkstyle + spotbugs + owasp via dev-quality
      - name: Build + Quality (dev-quality profile)
        working-directory: backend/search-service
        env:
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}   # optional but recommended
        run: |
          ./mvnw -B -Pdev-quality -DskipITs=true \
            -DnvdApiKey="$NVD_API_KEY" \
            -Danalyzers.assembly.enabled=false \
            -Danalyzers.retirejs.enabled=false \
            -Danalyzers.node.enabled=false \
            -Danalyzers.nugetconf.enabled=false \
            -Danalyzers.assembly.enabled=false \
            -Danalyzers.nuspec.enabled=false \
            -Danalyzers.cocoapods.enabled=false \
            -Danalyzers.swift.enabled=false \
            -Danalyzers.rubygems.enabled=false \
            -Danalyzers.python.enabled=false \
            -Danalyzers.php.enabled=false \
            clean verify
      # Generate Checkstyle HTML report (in addition to XML)
      - name: Generate site reports (Checkstyle HTML)
        working-directory: backend/search-service
        run: ./mvnw -B -Pdev-quality -DskipITs=true site

      - name: SonarCloud Scan
        working-directory: backend/search-service
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./mvnw -B -Pdev-quality clean verify sonar:sonar \
            -Dsonar.projectKey=com.aiproductsearch:search-service \
            -Dsonar.organization=siva-teja-singam-setty \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push Docker image
        id: pushimg
        working-directory: ${{ env.SERVICE_PATH }}
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          TAG="${GITHUB_SHA::7}"
          ECR_URI="${ACCOUNT_ID}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}"
          docker build -t "$ECR_URI:$TAG" .
          docker push "$ECR_URI:$TAG"
          echo "TAG=$TAG" >> $GITHUB_OUTPUT
          echo "ECR_URI=$ECR_URI" >> $GITHUB_OUTPUT

      # Upload key reports for quick inspection
      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-reports
          path: |
            backend/search-service/target/surefire-reports/**
            backend/search-service/target/site/jacoco/index.html
            backend/search-service/target/site/checkstyle.html
            backend/search-service/target/spotbugsXml.xml
            backend/search-service/target/dependency-check-report.html
          if-no-files-found: ignore

